CREATE DATABASE FACTURACION;
USE FACTURACION;
GO
CREATE TABLE  BODEGA(
	BOD_CODIGO INT,
	BOD_REFERENCIA VARCHAR(25),
	BOD_DESCRIPCION VARCHAR(50)
);
GO
CREATE TABLE CAJA(
	CAJ_CODIGO INT,
	CAJ_REFERENCIA VARCHAR(25),
	CAJ_DESCRIPCION VARCHAR(50)
);
GO
CREATE TABLE EMPRESA(
	EMP_CODIGO INT,
	EMP_NOMBRE VARCHAR(25),
	EMP_DIRECCION VARCHAR(50),
	EMP_TELEFONO NVARCHAR(12),
	EMP_RNC NVARCHAR(11),
	EMP_LOGO IMAGE
);
GO
CREATE TABLE USER_LOGIN(
	LOG_CODIGO INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	LOG_USUARIO VARCHAR(50),
	LOG_CLAVE VARCHAR(25),
	LOG_NOMBRE VARCHAR(50),
	LOG_APELLIDO VARCHAR(50),
	LOG_NICKNAME VARCHAR(35),
	LOG_CEDULA VARCHAR(13),
	LOG_PAIS VARCHAR(50),
	LOG_PROVINCIA VARCHAR(25),
	LOG_DIRECCION VARCHAR(50),
	LOG_TELEFONO VARCHAR(13),
	LOG_CORREO VARCHAR(65),
	LOG_DEPARTAMENTO VARCHAR(30),
	LOG_CARGO VARCHAR(30),
	LOG_STATUS VARCHAR(30)
);

--PROCEDURES
-- Procedimiento para verificar login
CREATE PROCEDURE [dbo].[SP_CHECKLOGIN]
    @usuario VARCHAR(50) = '',
    @clave VARCHAR(45) = ''
AS
BEGIN
    IF EXISTS (
        SELECT 1
        FROM [USER_LOGIN]
        WHERE LOG_USUARIO = @usuario AND LOG_CLAVE = @clave
    )
    BEGIN
        SELECT LOG_NICKNAME, LOG_STATUS, LOG_CARGO, LOG_NOMBRE, LOG_APELLIDO
        FROM [USER_LOGIN]
        WHERE LOG_USUARIO = @usuario;
    END
END
GO

-- Procedimiento para consultar bodegas
CREATE PROCEDURE SP_CONSULTA_GRIDBODEGA
AS
BEGIN
    SELECT BOD_CODIGO, BOD_REFERENCIA, BOD_DESCRIPCION
    FROM BODEGA
    ORDER BY BOD_CODIGO;
END
GO

-- Procedimiento para consultar cajas
CREATE PROCEDURE SP_CONSULTA_GRIDCAJA
AS
BEGIN
    SELECT CAJ_CODIGO, CAJ_REFERENCIA, CAJ_DESCRIPCION
    FROM CAJA
    ORDER BY CAJ_CODIGO;
END
GO
-- Consultar imagen empresa
CREATE PROCEDURE SP_CONSULTARIMAGEN_EMPRESA
AS
BEGIN
    SELECT EMP_LOGO FROM EMPRESA ORDER BY EMP_CODIGO ASC;
END
GO

-- Contar registros en BODEGA
CREATE PROCEDURE SP_CONTARREGISTRO_BODEGAS
AS
BEGIN
    SELECT COUNT(*) + 1 FROM BODEGA;
END
GO

-- Contar registros en CAJA
CREATE PROCEDURE SP_CONTARREGISTRO_CAJA
AS
BEGIN
    SELECT COUNT(*) + 1 FROM CAJA;
END
GO

-- Insertar nueva bodega
CREATE PROCEDURE SP_INSERT_BODEGA
    @BOD_CODIGO INT,
    @BOD_REFERENCIA VARCHAR(25),
    @BOD_DESCRIPCION VARCHAR(50)
AS
BEGIN
    INSERT INTO BODEGA (BOD_CODIGO, BOD_REFERENCIA, BOD_DESCRIPCION)
    VALUES (@BOD_CODIGO, @BOD_REFERENCIA, @BOD_DESCRIPCION);
END
GO

-- Insertar nueva caja
CREATE PROCEDURE SP_INSERT_CAJA
    @CAJ_CODIGO INT,
    @CAJ_REFERENCIA VARCHAR(25),
    @CAJ_DESCRIPCION VARCHAR(50)
AS
BEGIN
    INSERT INTO CAJA (CAJ_CODIGO, CAJ_REFERENCIA, CAJ_DESCRIPCION)
    VALUES (@CAJ_CODIGO, @CAJ_REFERENCIA, @CAJ_DESCRIPCION);
END
GO

-- Insertar empresa
CREATE PROCEDURE SP_INSERT_EMPRESA
    @EMP_NOMBRE VARCHAR(50),
    @EMP_DIRECCION VARCHAR(50),
    @EMP_TELEFONO VARCHAR(15),
    @EMP_RNC VARCHAR(11),
    @EMP_LOGO IMAGE
AS
BEGIN
    INSERT INTO EMPRESA (EMP_NOMBRE, EMP_DIRECCION, EMP_TELEFONO, EMP_RNC, EMP_LOGO)
    VALUES (@EMP_NOMBRE, @EMP_DIRECCION, @EMP_TELEFONO, @EMP_RNC, @EMP_LOGO);
END
GO

-- Verifica si ya existe la bodega con esa referencia y descripción
CREATE PROCEDURE SP_REGISTROEXISTE_BODEGA 
    @BOD_REFERENCIA VARCHAR(25) = '',
    @BOD_DESCRIPCION VARCHAR(50) = ''
AS
BEGIN
    SELECT * FROM BODEGA
    WHERE BOD_REFERENCIA = @BOD_REFERENCIA AND BOD_DESCRIPCION = @BOD_DESCRIPCION;
END
GO

-- Verifica si ya existe la caja con esa referencia y descripción
CREATE PROCEDURE SP_REGISTROEXISTE_CAJA 
    @CAJ_REFERENCIA VARCHAR(25) = '',
    @CAJ_DESCRIPCION VARCHAR(50) = ''
AS
BEGIN
    SELECT * FROM CAJA
    WHERE CAJ_REFERENCIA = @CAJ_REFERENCIA AND CAJ_DESCRIPCION = @CAJ_DESCRIPCION;
END
GO

-- Actualiza una bodega existente
CREATE PROCEDURE SP_UPDATE_BODEGA
    @BOD_CODIGO INT,
    @BOD_REFERENCIA VARCHAR(25),
    @BOD_DESCRIPCION VARCHAR(50)
AS
BEGIN
    UPDATE BODEGA
    SET BOD_REFERENCIA = @BOD_REFERENCIA,
        BOD_DESCRIPCION = @BOD_DESCRIPCION
    WHERE BOD_CODIGO = @BOD_CODIGO;
END
GO

-- Actualiza una caja existente
CREATE PROCEDURE SP_UPDATE_CAJA
    @CAJ_CODIGO INT,
    @CAJ_REFERENCIA VARCHAR(25),
    @CAJ_DESCRIPCION VARCHAR(50)
AS
BEGIN
    UPDATE CAJA
    SET CAJ_REFERENCIA = @CAJ_REFERENCIA,
        CAJ_DESCRIPCION = @CAJ_DESCRIPCION
    WHERE CAJ_CODIGO = @CAJ_CODIGO;
END
GO

--NUEVOS ARREGLAR DESDE AQUI
CREATE TABLE TIPOSCLIENTES(
 TIP_CODIGO INT,
 TIP_DESCRIPCION VARCHAR(12)
);
CREATE TABLE PAIS(
    ID_PAIS INT,
    PAIS_NOMBRE VARCHAR(50)
);
CREATE TABLE PROVINCIA(
    ID_PROVINCIA INT,
    PRO_NOMBRE VARCHAR(50),
    ID_PAIS INT
);

CREATE TABLE CLIENTES(
    CLI_CODIGO INT,
    CLI_TIPO VARCHAR(12),
    CLI_NOMBRE VARCHAR(50),
    CLI_RNC VARCHAR(12),
    CLI_CONTACTO VARCHAR(50),
    CLI_CARGO VARCHAR(25),
    CLI_PAGINA VARCHAR(40),
    CLI_APELLIDO VARCHAR(50),
    CLI_CEDULA VARCHAR(12),
    CLI_DIRECCION VARCHAR(30),
    CLI_TELEFONO VARCHAR(12),
    CLI_CELULAR VARCHAR(12),
    CLI_CORREO VARCHAR(65),
    CLI_PAIS VARCHAR(30),
    CLI_PROVINCIA VARCHAR(30)
);

INSERT INTO TIPOSCLIENTES VALUES 
(1, 'EMPRESARIAL'), (2,'PERSONAL');

INSERT INTO PAIS VALUES 
(1,'REPUBLICA DOMINICANA'),
(2,'VENEZUELA' ),
(3,'HAITI'),
(4,'CHINA'),
(5,'ESTADOS UNIDOS'),
(6,'PUERTO RICO'),
(7,'ESPANA'),
(8,'COLOMBIA');

CREATE PROCEDURE SP_CONSULTA_DBCLIENTES AS
SELECT TIP_DESCRIPCION FROM TIPOSCLIENTES
GO

CREATE PROCEDURE SP_CONTARREGISTRO_CLIENTES AS BEGIN
SELECT COUNT(*) + 1 FROM CLIENTES
END 
GO

CREATE PROCEDURE SP_PAIS AS BEGIN
SELECT ID_PAIS, PAIS_NOMBRE FROM PAIS
END
GO

CREATE PROCEDURE SP_PROVINCIA @ID_PROVINCIA INT
AS BEGIN
SELECT * FROM PROVINCIA WHERE ID_PROVINCIA=@ID_PROVINCIA
END
GO